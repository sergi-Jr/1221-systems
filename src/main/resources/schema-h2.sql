DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS dishes;
DROP TABLE IF EXISTS meals;

CREATE TABLE users (
  user_id UUID NOT NULL,
   name VARCHAR NOT NULL,
   email VARCHAR NOT NULL,
   age INTEGER NOT NULL,
   weight INTEGER NOT NULL,
   height INTEGER NOT NULL,
   goal VARCHAR NOT NULL,
   sex VARCHAR NOT NULL,
   daily_rate INTEGER NOT NULL,
   CONSTRAINT pk_users PRIMARY KEY (user_id)
);

ALTER TABLE users ADD CONSTRAINT uc_users_email UNIQUE (email);

CREATE TABLE meals (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   meal_id INTEGER NOT NULL,
   user_id UUID,
   dish_id UUID,
   dish_amount INTEGER NOT NULL,
   date date,
   CONSTRAINT pk_meals PRIMARY KEY (id)
);

ALTER TABLE meals ADD CONSTRAINT FK_MEALS_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id);

CREATE TABLE dishes (
  id UUID NOT NULL,
   name VARCHAR NOT NULL,
   calorie_amount INTEGER NOT NULL,
   protein INTEGER NOT NULL,
   fat INTEGER NOT NULL,
   carbohydrate INTEGER NOT NULL,
   CONSTRAINT pk_dishes PRIMARY KEY (id)
);



INSERT INTO users (user_id, name, email, age, weight, height, goal, daily_rate, sex) VALUES (RANDOM_UUID(), 'test1', 'test1@mail.ru', 10, 35, 140, 'MAINTENANCE', 100, 'MALE');
INSERT INTO users (user_id, name, email, age, weight, height, goal, daily_rate, sex) VALUES (RANDOM_UUID(), 'test2', 'test2@mail.ru', 30, 100, 180, 'GAIN', 100, 'MALE');
INSERT INTO users (user_id, name, email, age, weight, height, goal, daily_rate, sex) VALUES (RANDOM_UUID(), 'test3', 'test3@mail.ru', 28, 80, 190, 'SLIMMING', 100, 'FEMALE');

INSERT INTO dishes (id, name, calorie_amount, protein, fat, carbohydrate) VALUES (RANDOM_UUID(), 'testdish1', 1000, 150, 300, 560);
INSERT INTO dishes (id, name, calorie_amount, protein, fat, carbohydrate) VALUES (RANDOM_UUID(), 'testdish2', 500, 75, 150, 280);
INSERT INTO dishes (id, name, calorie_amount, protein, fat, carbohydrate) VALUES (RANDOM_UUID(), 'testdish3', 250, 30, 75, 140);